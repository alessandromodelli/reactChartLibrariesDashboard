{"ast":null,"code":"var _jsxFileName = \"/Users/alessandromodelli/Desktop/ReactChartAnalysis/charts-libraries-analysis/src/Components/UI/Recharts/BarChart/BarChart.tsx\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Barchart = props => {\n  const colors = ['#7ED6FB', '#20ACD9', '#09556F', '#06152B', '#7ED6FB', '#20ACD9', '#09556F', '#06152B', '#7ED6FB', '#20ACD9', '#09556F', '#06152B'];\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    width: props.widthBarC,\n    height: props.heightBarC,\n    data: props.data,\n    margin: {\n      top: props.top,\n      right: props.right,\n      left: props.left,\n      bottom: props.bottom\n    },\n    layout: props.vertical ? \"vertical\" : \"horizontal\",\n    children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n      horizontal: true,\n      vertical: false,\n      opacity: 0.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), props.vertical ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: props.dataKey,\n        type: \"category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: props.dataKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      dataKey: \"uv\",\n      barSize: props.barSize,\n      children: props.data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: colors[index % 20]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","Tooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","Barchart","props","colors","width","widthBarC","height","heightBarC","data","margin","top","right","left","bottom","layout","vertical","children","horizontal","opacity","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","barSize","map","entry","index","fill","_c","$RefreshReg$"],"sources":["/Users/alessandromodelli/Desktop/ReactChartAnalysis/charts-libraries-analysis/src/Components/UI/Recharts/BarChart/BarChart.tsx"],"sourcesContent":["import { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n\nexport interface BarChartProps {\n\n    data: DataProps[],\n    widthRC: string,\n    heightRC: string,\n    widthBarC: number,\n    heightBarC: number,\n    barSize: number,\n    dataKey: string,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n    color?: string\n    vertical: boolean\n}\n\nexport interface DataProps {\n\n    name: string,\n    uv: number,\n    amt?: number,\n\n}\n\n\nconst Barchart = (props: BarChartProps) => {\n    const colors = ['#7ED6FB', '#20ACD9', '#09556F', '#06152B', '#7ED6FB', '#20ACD9', '#09556F', '#06152B', '#7ED6FB', '#20ACD9', '#09556F', '#06152B'];\n    return (\n        <BarChart\n            width={props.widthBarC}\n            height={props.heightBarC}\n            data={props.data}\n            margin={{\n                top: props.top,\n                right: props.right,\n                left: props.left,\n                bottom: props.bottom,\n            }}\n            layout={props.vertical ? \"vertical\" : \"horizontal\"}\n        >\n            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n            <CartesianGrid horizontal={true} vertical={false} opacity={0.2} />\n\n            {props.vertical ?\n                <>\n                    <YAxis dataKey={props.dataKey} type=\"category\" />\n                    <XAxis type=\"number\" />\n                </> :\n                <>\n                    <XAxis dataKey={props.dataKey} />\n                    {/* <YAxis type=\"category\" /> */}\n                </>\n\n            }\n            <Tooltip />\n            {/* <Legend /> */}\n            <Bar dataKey=\"uv\" barSize={props.barSize} >\n                {props.data.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n\n                ))}\n\n            </Bar>\n        </BarChart>\n    );\n\n}\n\nexport default Barchart"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,QAAqC,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AA6BlH,MAAMC,QAAQ,GAAIC,KAAoB,IAAK;EACvC,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EACnJ,oBACIL,OAAA,CAACR,QAAQ;IACLc,KAAK,EAAEF,KAAK,CAACG,SAAU;IACvBC,MAAM,EAAEJ,KAAK,CAACK,UAAW;IACzBC,IAAI,EAAEN,KAAK,CAACM,IAAK;IACjBC,MAAM,EAAE;MACJC,GAAG,EAAER,KAAK,CAACQ,GAAG;MACdC,KAAK,EAAET,KAAK,CAACS,KAAK;MAClBC,IAAI,EAAEV,KAAK,CAACU,IAAI;MAChBC,MAAM,EAAEX,KAAK,CAACW;IAClB,CAAE;IACFC,MAAM,EAAEZ,KAAK,CAACa,QAAQ,GAAG,UAAU,GAAG,YAAa;IAAAC,QAAA,gBAGnDlB,OAAA,CAACH,aAAa;MAACsB,UAAU,EAAE,IAAK;MAACF,QAAQ,EAAE,KAAM;MAACG,OAAO,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEjEpB,KAAK,CAACa,QAAQ,gBACXjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACIlB,OAAA,CAACJ,KAAK;QAAC6B,OAAO,EAAErB,KAAK,CAACqB,OAAQ;QAACC,IAAI,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDxB,OAAA,CAACL,KAAK;QAAC+B,IAAI,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACzB,CAAC,gBACHxB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,eACIlB,OAAA,CAACL,KAAK;QAAC8B,OAAO,EAAErB,KAAK,CAACqB;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBAEnC,CAAC,eAGPxB,OAAA,CAACF,OAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEXxB,OAAA,CAACP,GAAG;MAACgC,OAAO,EAAC,IAAI;MAACE,OAAO,EAAEvB,KAAK,CAACuB,OAAQ;MAAAT,QAAA,EACpCd,KAAK,CAACM,IAAI,CAACkB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACzB9B,OAAA,CAACN,IAAI;QAAuBqC,IAAI,EAAE1B,MAAM,CAACyB,KAAK,GAAG,EAAE;MAAE,GAAzC,QAAOA,KAAM,EAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAE1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAGnB,CAAC;AAAAQ,EAAA,GAzCK7B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}