{"ast":null,"code":"var _jsxFileName = \"/Users/alessandromodelli/Desktop/ReactChartAnalysis/charts-libraries-analysis/src/App.tsx\",\n  _s = $RefreshSig$();\nimport styles from './App.module.css';\nimport React, { useEffect, useState } from \"react\";\nimport FormInput from './Components/FormInput/FormInput';\nimport Recharts from './Components/Recharts';\nimport Label from './Components/UI/Label';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nconst App = () => {\n  _s();\n  const [data, setData] = useState();\n  const [json, setJson] = useState();\n  const [file, setFile] = useState();\n  const fileReader = new FileReader();\n  const csvToArray = () => {\n    // Split data by newline character\n    const lines = data === null || data === void 0 ? void 0 : data.trim().split(/\\n/g);\n    // Split data by ','\n    const wordsPerLine = lines === null || lines === void 0 ? void 0 : lines.map(line => line.trim().split(','));\n    //First line are the headings\n    const headings = wordsPerLine === null || wordsPerLine === void 0 ? void 0 : wordsPerLine.shift();\n\n    //Create JSON obj\n    const jsonData = wordsPerLine === null || wordsPerLine === void 0 ? void 0 : wordsPerLine.map((line, index) => {\n      var _id$longitude$latitud;\n      return (_id$longitude$latitud = {\n        id: index,\n        longitude: parseFloat(line[0]),\n        latitude: parseFloat(line[1]),\n        housing_median_age: parseFloat(line[2]),\n        total_rooms: parseFloat(line[3]),\n        total_bedrooms: parseFloat(line[4]),\n        population: parseFloat(line[5]),\n        households: parseFloat(line[6]),\n        median_income: parseFloat(line[7]),\n        median_house_value: parseFloat(line[8]),\n        ocean_proximity: line[9]\n      }) !== null && _id$longitude$latitud !== void 0 ? _id$longitude$latitud : [];\n    });\n    setJson(jsonData);\n    console.log(jsonData);\n  };\n  const handleOnChange = e => {\n    setFile(e.target.files[0]);\n    console.log(file);\n  };\n  const handleOnSubmit = e => {\n    e.preventDefault();\n    if (file) {\n      fileReader.onload = event => {\n        const csvOutput = event.target.result;\n        setData(csvOutput);\n        //console.log(csvOutput)\n      };\n\n      fileReader.readAsText(file);\n    }\n  };\n  useEffect(() => {\n    csvToArray();\n    //console.log(data)\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.App,\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      text: 'Charts Libraries Analysis',\n      className: styles.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n      handleOnChange: handleOnChange,\n      handleOnSubmit: handleOnSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartsContainer\",\n      children: /*#__PURE__*/_jsxDEV(Recharts, {\n        data: json !== null && json !== void 0 ? json : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Aun1Yj3SVHm/7JQKa3kBssk4+UI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["styles","React","useEffect","useState","FormInput","Recharts","Label","jsxDEV","_jsxDEV","App","_s","data","setData","json","setJson","file","setFile","fileReader","FileReader","csvToArray","lines","trim","split","wordsPerLine","map","line","headings","shift","jsonData","index","_id$longitude$latitud","id","longitude","parseFloat","latitude","housing_median_age","total_rooms","total_bedrooms","population","households","median_income","median_house_value","ocean_proximity","console","log","handleOnChange","e","target","files","handleOnSubmit","preventDefault","onload","event","csvOutput","result","readAsText","className","children","text","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alessandromodelli/Desktop/ReactChartAnalysis/charts-libraries-analysis/src/App.tsx"],"sourcesContent":["\nimport styles from  './App.module.css';\nimport React, { useEffect, useState } from \"react\";\nimport useReadCSV from './Components/Hooks/useReadCSV';\nimport Papa, { ParseResult } from \"papaparse\"\nimport FormInput from './Components/FormInput/FormInput';\nimport { BarChart, LineChart } from 'recharts';\nimport LineCharts from './Components/UI/Recharts/LineCharts';\nimport Recharts from './Components/Recharts';\nimport Label from './Components/UI/Label';\n\nexport interface DataInputProps {\n    id: number,\n    longitude: number,\n    latitude: number,\n    housing_median_age: number,\n    total_rooms: number,\n    total_bedrooms: number,\n    population: number,\n    households: number,\n    median_income: number,\n    median_house_value: number,\n    ocean_proximity: string,\n};\n\nexport interface ChartProps {\n    data: { name: string, uv: number }[]\n    title: string\n  }\n\nconst App = () => {\n\n    const [data, setData] = useState<string>();\n    const [json, setJson] = useState<DataInputProps[]>();\n\n    const [file, setFile] = useState();\n\n    const fileReader = new FileReader();\n\n    const csvToArray = () => {\n        // Split data by newline character\n        const lines = data?.trim().split(/\\n/g);\n        // Split data by ','\n        const wordsPerLine = lines?.map(line => line.trim().split(','));\n        //First line are the headings\n        const headings = wordsPerLine?.shift();\n\n        //Create JSON obj\n        const jsonData = wordsPerLine?.map((line, index) => {\n            return ({\n                id: index,\n                longitude: parseFloat(line[0]),\n                latitude: parseFloat(line[1]),\n                housing_median_age: parseFloat(line[2]),\n                total_rooms: parseFloat(line[3]),\n                total_bedrooms: parseFloat(line[4]),\n                population: parseFloat(line[5]),\n                households: parseFloat(line[6]),\n                median_income: parseFloat(line[7]),\n                median_house_value: parseFloat(line[8]),\n                ocean_proximity: line[9]\n            }) ?? [];\n        });\n\n        setJson(jsonData)\n\n        console.log(jsonData)\n    }\n\n    const handleOnChange = (e: any) => {\n\n        setFile(e.target.files[0]);\n        console.log(file)\n    };\n\n\n\n    const handleOnSubmit = (e: any) => {\n        e.preventDefault();\n\n        if (file) {\n            fileReader.onload = (event: any) => {\n                const csvOutput = event.target.result;\n                setData(csvOutput)\n                //console.log(csvOutput)\n            };\n\n            fileReader.readAsText(file);\n\n\n\n        }\n    };\n\n    useEffect(() => {\n        csvToArray();\n        //console.log(data)\n    }, [data])\n\n\n\n\n    return (\n        <div className={styles.App}>\n            <Label text={'Charts Libraries Analysis'} className={styles.title} />\n            <FormInput handleOnChange={handleOnChange} handleOnSubmit={handleOnSubmit} />\n\n            <div className={\"chartsContainer\"}>\n\n                <Recharts data={json ?? []} />\n\n            </div>\n            \n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}